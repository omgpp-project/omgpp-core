// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
using System.Runtime.InteropServices;


namespace OmgppNative
{
    public static unsafe partial class OmgppClientNative
    {
        const string __DllName = "server";



        [DllImport(__DllName, EntryPoint = "client_create", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void* client_create(byte* ip, ushort port);

        [DllImport(__DllName, EntryPoint = "client_process", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void client_process(void* client);

        [DllImport(__DllName, EntryPoint = "client_connect", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void client_connect(void* client);

        [DllImport(__DllName, EntryPoint = "client_disconnect", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void client_disconnect(void* client);

        [DllImport(__DllName, EntryPoint = "client_register_on_connection_state_change", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void client_register_on_connection_state_change(void* client, delegate* unmanaged[Cdecl]<EndpointFFI, ConnectionState, void> callback);

        [DllImport(__DllName, EntryPoint = "client_register_on_message", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void client_register_on_message(void* client, delegate* unmanaged[Cdecl]<EndpointFFI, long, byte*, nuint, void> callback);

        [DllImport(__DllName, EntryPoint = "client_send", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void client_send(void* client, long msg_type, byte* data, nuint size);

        [DllImport(__DllName, EntryPoint = "client_send_reliable", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void client_send_reliable(void* client, long msg_type, byte* data, nuint size);

        [DllImport(__DllName, EntryPoint = "client_destroy", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void client_destroy(void* client);


    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct EndpointFFI
    {
        public fixed byte ipv6_octets[16];
        public ushort port;
    }


    public enum ConnectionState : short
    {
        None = -1,
        Disconnected = 0,
        Disconnecting = 1,
        Connecting = 2,
        Connected = 3,
    }


}
