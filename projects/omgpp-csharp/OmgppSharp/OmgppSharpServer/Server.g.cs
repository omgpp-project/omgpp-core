// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
using System.Runtime.InteropServices;


namespace OmgppNative
{
    public static unsafe partial class OmgppServerNative
    {
        const string __DllName = "server";



        [DllImport(__DllName, EntryPoint = "server_create", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void* server_create(byte* ip, ushort port);

        [DllImport(__DllName, EntryPoint = "server_process", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void server_process(void* server);

        [DllImport(__DllName, EntryPoint = "server_register_on_connect_requested", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void server_register_on_connect_requested(void* server, delegate* unmanaged[Cdecl]<UuidFFI, EndpointFFI, bool> callback);

        [DllImport(__DllName, EntryPoint = "server_register_on_connection_state_change", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void server_register_on_connection_state_change(void* server, delegate* unmanaged[Cdecl]<UuidFFI, EndpointFFI, ConnectionState, void> callback);

        [DllImport(__DllName, EntryPoint = "server_register_on_message", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void server_register_on_message(void* server, delegate* unmanaged[Cdecl]<UuidFFI, EndpointFFI, long, byte*, nuint, void> callback);

        [DllImport(__DllName, EntryPoint = "server_send", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void server_send(void* server, UuidFFI* uuid, long msg_type, byte* data, nuint size);

        [DllImport(__DllName, EntryPoint = "server_send_reliable", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void server_send_reliable(void* server, UuidFFI* uuid, long msg_type, byte* data, nuint size);

        [DllImport(__DllName, EntryPoint = "server_broadcast", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void server_broadcast(void* server, long msg_type, byte* data, nuint size);

        [DllImport(__DllName, EntryPoint = "server_broadcast_reliable", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void server_broadcast_reliable(void* server, long msg_type, byte* data, nuint size);

        [DllImport(__DllName, EntryPoint = "server_disconnect", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void server_disconnect(void* server, UuidFFI* uuid);

        [DllImport(__DllName, EntryPoint = "server_destroy", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void server_destroy(void* server);


    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct EndpointFFI
    {
        public fixed byte ipv6_octets[16];
        public ushort port;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct UuidFFI
    {
        public fixed byte bytes[16];
    }


    public enum ConnectionState : short
    {
        None = -1,
        Disconnected = 0,
        Disconnecting = 1,
        Connecting = 2,
        Connected = 3,
    }


}
